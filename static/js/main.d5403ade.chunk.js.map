{"version":3,"sources":["logo.svg","axios.js","Row.js","request.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","console","log","map","movie","onClick","movieTrailer","tmdbId","id","then","response","urlParams","URLSearchParams","URL","search","catch","error","handleClick","src","poster_path","backdrop_path","alt","name","videoId","opts","heigh","width","pllayerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOrignals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentriesMovies","Banner","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","orignal_name","overview","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5403ade.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from \"axios\"\r\n\r\n//base url to make request from movie db\r\nconst instance=axios.create(\r\n    {\r\n        baseURL:\"https://api.themoviedb.org/3\",\r\n    }\r\n);\r\n\r\nexport default instance;","import React ,{ useState ,useEffect} from 'react';\r\nimport axios from './axios';\r\nimport \"./Row.css\"\r\nimport Youtube from \"react-youtube\";\r\nimport movieTrailer from 'movie-trailer'\r\n\r\n const baseurl=\"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({title,fetchUrl,isLargeRow}) {/*samename as passed*/\r\n    \r\n\r\n    const [movies,setMovies]=useState([]);\r\n    const [trailerUrl,setTrailerUrl]=useState(\"\");\r\n\r\n    useEffect(()=>{\r\n        \r\n        async function fetchData(){\r\n           \r\n            const request=await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            //console.log(movies);\r\n            //https://api.themoviedb.org/3/discover/tv?api_key=f5057886d8e7b4b7d6cfa3d36f44fde3&with_networks=213\r\n            return request;\r\n        }\r\n        fetchData();\r\n    },[fetchUrl])/*why pass fetchurl here?*/\r\n\r\n\r\n    const opts={\r\n        heigh:\"390\",\r\n        width:\"100%\",\r\n        pllayerVars:{\r\n            autoplay:1,\r\n        }\r\n    }\r\n    /*const handleClick=(movie)=>{\r\n        if(trailerUrl){\r\n            setTrailerUrl('');\r\n        }\r\n        else{\r\n            movieTrailer(movie?.name||\"\")\r\n            .then((url)=>{\r\n                const urlParams=new URLSearchParams(new URL(url).search);\r\n                setTrailerUrl(urlParams.get(\"v\"));\r\n                console.log(trailerUrl);\r\n            })\r\n            .catch((error)=>console.log(error));\r\n        }\r\n\r\n    }*/\r\n    const handleClick = (movie) => {\r\n        console.log(movie);\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n        //movieTrailer(null,{tmdbId:movie.id}).then(response=>console.log(response));\r\n      /*movieTrailer(movie?.name||\"\")*/\r\n      movieTrailer(null,{tmdbId:movie.id})\r\n        .then(response => {\r\n            //console.log(response);\r\n            \r\n          const urlParams = new URLSearchParams(new URL(response).search);\r\n         setTrailerUrl(urlParams.get(\"v\"));\r\n        \r\n        })\r\n        .catch((error) => console.log(error));\r\n        \r\n    }\r\n  };\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n            \r\n            <div className=\"row_posters\">\r\n                {console.log(movies)}\r\n                {movies.map((movie)=>{\r\n                    return <img  \r\n                        key={movie.id}\r\n                        onClick={()=>handleClick(movie)}\r\n                        className={`row_poster ${isLargeRow&&\"row_posterLarge\"}`}\r\n                        src={`${baseurl}${isLargeRow?movie.poster_path:movie.backdrop_path}`} alt={movie.name}/>\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            {trailerUrl&&<Youtube videoId={trailerUrl} opts={opts}/>}\r\n\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n\r\n","const API_KEY=\"f5057886d8e7b4b7d6cfa3d36f44fde3\";\r\n\r\nconst requests={\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOrignals:`/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated:`movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies:`/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies:`/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies:`/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies:`/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentriesMovies:`/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n\r\n}\r\n\r\nexport default requests;","import React, { useEffect, useState } from 'react'\r\nimport axios from './axios'\r\nimport requests from './request'\r\nimport \"./Banner.css\"\r\nfunction Banner() {\r\n    const[movie,setMovie]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            const request=await axios.get(requests.fetchNetflixOrignals);\r\n            setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length-1)]);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    },[] );/*[] means on page load?*/\r\n\r\n    return (\r\n        <header className=\"banner\" style={{backgroundSize:\"cover\",\r\n            backgroundImage:`url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n            backgroundPosition:\"center center\"\r\n        }}>\r\n            <div className=\"banner_contents\">\r\n                <h1 className=\"banner_title\">{movie?.title||movie?.name || movie?.orignal_name}</h1>\r\n                \r\n                <div className=\"banner_buttons\">\r\n                    <button className=\"banner_button\">Play</button>\r\n                    <button className=\"banner_button\">My List</button>\r\n                </div>\r\n\r\n                <h1 className=\"banner_description\">{movie?.overview}</h1>\r\n            </div>\r\n\r\n            <div className=\"banner_fadeBottom\"/>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Nav.css'\r\n\r\nfunction Nav() {\r\n\r\nconst [show,handleShow]=useState(false);\r\nuseEffect(()=>{\r\n    window.addEventListener(\"scroll\",()=>{\r\n        if(window.scrollY>100){\r\n            handleShow(true)\r\n        }\r\n        else{\r\n            handleShow(false);\r\n        }\r\n    }\r\n    );\r\n\r\n    return ()=>{window.removeEventListener(\"scroll\");}\r\n\r\n},[]);\r\n\r\n    return (\r\n        <div className={`nav ${show&&\"nav_black\"}`}>\r\n            <img className=\"nav_logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/799px-Netflix_2015_logo.svg.png\" alt=\"Netflix Logo\"/>\r\n            <img className=\"nav_avatar\" src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" alt=\"Netflix Logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Row from './Row';\nimport requests from './request';\nimport Banner from './Banner'\nimport Nav from \"./Nav\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav/>\n      <Banner/>\n      <Row title=\"NetflixOrignals\" fetchUrl={requests.fetchNetflixOrignals} isLargeRow={true}/>\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/>\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n      <Row title=\"Documentries\" fetchUrl={requests.fetchDocumentriesMovies}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}